{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text } from 'react-native-elements';\nimport React, { useState, useEffect } from 'react';\nimport MyCategoryItem from \"../components/MyCategoryItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Categories(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataResult = _useState6[0],\n      setDataResult = _useState6[1];\n\n  useEffect(function () {\n    fetch('https://www.themealdb.com/api/json/v1/1/categories.php').then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setIsLoaded(true);\n      setDataResult(result);\n    }, function (error) {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: displayIngredientContainer(error, isLoaded, dataResult, navigation)\n  });\n}\n\nfunction displayIngredientContainer(error, isLoaded, dataResult, navigation) {\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      search = _useState8[0],\n      setSearch = _useState8[1];\n\n  var updateSearch = function updateSearch(search) {\n    setSearch(search);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(MyCategoryItem, {\n      itemData: item,\n      navigatorRef: navigation\n    });\n  };\n\n  if (error) {\n    return _jsx(View, {\n      children: _jsxs(Text, {\n        children: [\"Error: \", error.message]\n      })\n    });\n  } else if (!isLoaded) {\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Preparing...\"\n      }), _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#ffffff\"\n      })]\n    });\n  } else if (dataResult.categories === undefined) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"There are no records found for this search\"\n      })\n    });\n  } else {\n    return _jsx(ScrollView, {\n      children: _jsx(FlatList, {\n        style: styles.listContainer,\n        data: dataResult.categories,\n        numColumns: 1,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.strCategory;\n        }\n      })\n    });\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F6F0EE',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%'\n  },\n  listContainer: {\n    width: '100vw',\n    backgroundColor: '#EFF0F3'\n  }\n});","map":{"version":3,"names":["Text","React","useState","useEffect","MyCategoryItem","Categories","navigation","error","setError","isLoaded","setIsLoaded","dataResult","setDataResult","fetch","then","res","json","result","styles","container","displayIngredientContainer","search","setSearch","updateSearch","renderItem","item","message","categories","undefined","listContainer","strCategory","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width"],"sources":["C:/Users/miche/OneDrive/Documents/GitHub/good-thoup-app/screens/CategoryScreen.js"],"sourcesContent":["/**\r\n * - This view will load details for a list of ingredients \r\n * \r\n */\r\n import { StyleSheet, View, FlatList, ActivityIndicator, ScrollView} from 'react-native';\r\n\r\n import { Text } from 'react-native-elements';\r\n \r\n import React, { useState, useEffect } from 'react';\r\n\r\n import MyCategoryItem from '../components/MyCategoryItem';\r\n \r\n export default function Categories({ navigation }) {\r\n\r\n      // add the three useState for the fetch process\r\n      const [error, setError] = useState(null);\r\n      const [isLoaded, setIsLoaded] = useState(false);\r\n      const [dataResult, setDataResult] = useState([]);\r\n\r\n          // add useEffect for the fetch process \r\n    useEffect(() => {\r\n      // API call for ingredients list\r\n        fetch('https://www.themealdb.com/api/json/v1/1/categories.php')\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            // successful load\r\n            setIsLoaded(true);\r\n            setDataResult(result);\r\n          },\r\n          (error) => {\r\n            // handle errors here\r\n            setIsLoaded(true);\r\n            setError(error);        \r\n          }\r\n        )\r\n      },\r\n     []);\r\n\r\n     return (\r\n      <View style={styles.container}>\r\n            {displayIngredientContainer(error, isLoaded, dataResult, navigation)}\r\n        </View>\r\n  );\r\n}\r\n\r\n\r\nfunction displayIngredientContainer(error, isLoaded, dataResult, navigation) {\r\n \r\n   // gets state for the search bar\r\n   const [search, setSearch] = useState(\"\");\r\n \r\n   // updates the search bar as user types \r\n   const updateSearch = (search) => {\r\n     setSearch(search);\r\n   };\r\n\r\n   const renderItem = ({ item }) => (\r\n    <MyCategoryItem itemData={item} navigatorRef={navigation}/>\r\n  );\r\n  if (error) {\r\n    // show an error message\r\n    return (\r\n      <View>\r\n        <Text>Error: {error.message}</Text>\r\n      </View>\r\n    );\r\n   }\r\n   else if (!isLoaded) {\r\n    // show the ActivityIndicator (spinner)\r\n    return (\r\n      <View>\r\n        <Text>Preparing...</Text>\r\n        <ActivityIndicator size=\"large\" color=\"#ffffff\"/>\r\n      </View>\r\n    );\r\n   }\r\n   else if (dataResult.categories === undefined) {\r\n    // not an error but no categories, so show a message\r\n    return (\r\n      <View>\r\n        <Text>There are no records found for this search</Text>\r\n      </View>\r\n    );\r\n   }\r\n   else {\r\n    // show the data in the flat list and display it on the myCategoryItem.js screen\r\n    return (\r\n      <ScrollView>\r\n          <FlatList\r\n            style={styles.listContainer}\r\n            data={dataResult.categories}\r\n            numColumns={1}\r\n            renderItem={renderItem}\r\n            keyExtractor={item => item.strCategory}\r\n          />\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n  \r\n  \r\n  const styles = StyleSheet.create({\r\n   container: {\r\n     flex: 1,\r\n     backgroundColor: '#F6F0EE',\r\n     alignItems: 'center',\r\n     justifyContent: 'flex-start',\r\n     width: '100%',\r\n   },\r\n   listContainer: {\r\n    width: '100vw',\r\n    backgroundColor: '#EFF0F3',\r\n   },\r\n });"],"mappings":"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"},"metadata":{},"sourceType":"module"}