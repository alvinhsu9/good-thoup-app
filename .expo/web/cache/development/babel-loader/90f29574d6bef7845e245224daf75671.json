{"ast":null,"code":"import { Button } from 'react-native-elements';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function myCategoryItem(_ref) {\n  var itemData = _ref.itemData,\n      navigatorRef = _ref.navigatorRef;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.itemContainer,\n      children: _jsx(Button, {\n        title: itemData.strCategory,\n        buttonStyle: {\n          backgroundColor: '#ABD1C6',\n          borderRadius: 25\n        },\n        containerStyle: {\n          width: \"100%\",\n          height: 100,\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        titleStyle: {\n          color: '#004643',\n          fontFamily: 'Roboto_400Regular',\n          fontSize: 20\n        },\n        onPress: function onPress() {\n          return navigatorRef.navigate('SingleCategory', {\n            idMeal: itemData.strCategory\n          });\n        }\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignContent: 'flex-start',\n    flexWrap: 'wrap'\n  },\n  itemContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 100,\n    marginTop: 15,\n    marginBottom: 15,\n    width: '60%',\n    borderRadius: 25,\n    backgroundColor: '#ABD1C6'\n  },\n  itemColAlpha: {\n    padding: 10,\n    alignSelf: 'center',\n    width: '100%'\n  },\n  itemText: {\n    fontSize: 18,\n    textTransform: 'uppercase',\n    color: '#004643',\n    lineHeight: 25,\n    textAlign: 'center',\n    fontFamily: 'Roboto_400Regular'\n  }\n});","map":{"version":3,"names":["Button","myCategoryItem","itemData","navigatorRef","styles","container","itemContainer","strCategory","backgroundColor","borderRadius","width","height","display","justifyContent","color","fontFamily","fontSize","navigate","idMeal","StyleSheet","create","flexDirection","alignContent","flexWrap","alignItems","marginTop","marginBottom","itemColAlpha","padding","alignSelf","itemText","textTransform","lineHeight","textAlign"],"sources":["C:/Users/miche/OneDrive/Documents/GitHub/good-thoup-app/components/MyCategoryItem.js"],"sourcesContent":["/**\r\n * - This view will loads the flatlist of ingredients with stylings attached \r\n */\r\n\r\n import { Button, } from 'react-native-elements';\r\n import { StyleSheet, View, } from 'react-native';\r\n \r\n // added navigatorRef here\r\n export default function myCategoryItem({ itemData, navigatorRef }) {\r\n   return (    \r\n     <View style={styles.container}>\r\n         <View style={styles.itemContainer}>\r\n                 {/* category name */}\r\n                 <Button\r\n                    title={itemData.strCategory}\r\n                    buttonStyle={{backgroundColor:'#ABD1C6', borderRadius: 25}}\r\n                    containerStyle={{\r\n                        width: \"100%\",\r\n                        height: 100,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\"\r\n                    }}\r\n                    titleStyle={{\r\n                        color: '#004643',\r\n                        fontFamily: 'Roboto_400Regular',\r\n                        fontSize: 20,\r\n                    }}\r\n                    onPress={() => navigatorRef.navigate('SingleCategory', {\r\n                        idMeal: itemData.strCategory,\r\n                    })}\r\n                 />\r\n         </View>\r\n     </View>\r\n   );\r\n }\r\n \r\n const styles = StyleSheet.create({\r\n     container: {\r\n        width: '100%',\r\n         display: 'flex',\r\n         flexDirection: 'row',\r\n         justifyContent: 'center',\r\n         alignContent: 'flex-start',\r\n         flexWrap: 'wrap',\r\n     },\r\n     itemContainer: {\r\n         display: 'flex',\r\n         flexDirection: 'row',\r\n         alignItems: 'center',\r\n         justifyContent: 'center',\r\n         height: 100,\r\n         marginTop: 15,\r\n         marginBottom: 15,\r\n         width: '60%',\r\n         borderRadius: 25,\r\n         backgroundColor: '#ABD1C6',\r\n     },\r\n     itemColAlpha: {\r\n         padding: 10,\r\n         alignSelf: 'center',\r\n         width: '100%',\r\n     },\r\n     itemText: {\r\n         fontSize: 18,\r\n         textTransform: 'uppercase',\r\n         color: '#004643',\r\n         lineHeight: 25,\r\n         textAlign: 'center',\r\n         fontFamily: 'Roboto_400Regular',\r\n     },\r\n \r\n \r\n });"],"mappings":"AAIC,SAASA,MAAT,QAAwB,uBAAxB;;;;AAIA,eAAe,SAASC,cAAT,OAAoD;EAAA,IAA1BC,QAA0B,QAA1BA,QAA0B;EAAA,IAAhBC,YAAgB,QAAhBA,YAAgB;EACjE,OACE,KAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,UACI,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,aAApB;MAAA,UAEQ,KAAC,MAAD;QACG,KAAK,EAAEJ,QAAQ,CAACK,WADnB;QAEG,WAAW,EAAE;UAACC,eAAe,EAAC,SAAjB;UAA4BC,YAAY,EAAE;QAA1C,CAFhB;QAGG,cAAc,EAAE;UACZC,KAAK,EAAE,MADK;UAEZC,MAAM,EAAE,GAFI;UAGZC,OAAO,EAAE,MAHG;UAIZC,cAAc,EAAE;QAJJ,CAHnB;QASG,UAAU,EAAE;UACRC,KAAK,EAAE,SADC;UAERC,UAAU,EAAE,mBAFJ;UAGRC,QAAQ,EAAE;QAHF,CATf;QAcG,OAAO,EAAE;UAAA,OAAMb,YAAY,CAACc,QAAb,CAAsB,gBAAtB,EAAwC;YACnDC,MAAM,EAAEhB,QAAQ,CAACK;UADkC,CAAxC,CAAN;QAAA;MAdZ;IAFR;EADJ,EADF;AAyBD;AAED,IAAMH,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;EAC7Bf,SAAS,EAAE;IACRK,KAAK,EAAE,MADC;IAEPE,OAAO,EAAE,MAFF;IAGPS,aAAa,EAAE,KAHR;IAIPR,cAAc,EAAE,QAJT;IAKPS,YAAY,EAAE,YALP;IAMPC,QAAQ,EAAE;EANH,CADkB;EAS7BjB,aAAa,EAAE;IACXM,OAAO,EAAE,MADE;IAEXS,aAAa,EAAE,KAFJ;IAGXG,UAAU,EAAE,QAHD;IAIXX,cAAc,EAAE,QAJL;IAKXF,MAAM,EAAE,GALG;IAMXc,SAAS,EAAE,EANA;IAOXC,YAAY,EAAE,EAPH;IAQXhB,KAAK,EAAE,KARI;IASXD,YAAY,EAAE,EATH;IAUXD,eAAe,EAAE;EAVN,CATc;EAqB7BmB,YAAY,EAAE;IACVC,OAAO,EAAE,EADC;IAEVC,SAAS,EAAE,QAFD;IAGVnB,KAAK,EAAE;EAHG,CArBe;EA0B7BoB,QAAQ,EAAE;IACNd,QAAQ,EAAE,EADJ;IAENe,aAAa,EAAE,WAFT;IAGNjB,KAAK,EAAE,SAHD;IAINkB,UAAU,EAAE,EAJN;IAKNC,SAAS,EAAE,QALL;IAMNlB,UAAU,EAAE;EANN;AA1BmB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}